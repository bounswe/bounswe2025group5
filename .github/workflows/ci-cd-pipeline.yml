name: CI/CD Pipeline for Deployment

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  release:
    types: [created]

env:
  GHCR_USERNAME: tenacke
  GHCR_PAT: ${{ secrets.TENACKE_PAT }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ”¹ Cache Docker layers
      - name: Set up cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: docker-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            docker-build-${{ github.ref }}-

      # ðŸ”¹ Build Docker Compose services with cache
      - name: Build Docker Compose services
        run: |
          docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1

      # ðŸ”¹ Log in once if we need to push
      - name: Log in to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.GHCR_USERNAME }}
          password: ${{ env.GHCR_PAT }}

      # ðŸ”¹ Push latest
      - name: Push latest image
        if: github.event_name != 'pull_request'
        run: |
          docker tag $IMAGE_NAME $IMAGE_NAME:latest
          docker push $IMAGE_NAME:latest

      # ðŸ”¹ Push release tag
      - name: Push release tag
        if: github.event_name == 'release'
        run: |
          TAG=${{ github.event.release.tag_name }}
          docker tag $IMAGE_NAME $IMAGE_NAME:$TAG
          docker push $IMAGE_NAME:$TAG
